{"version":3,"sources":["facebookfix.js","home.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"home.min.js","sourcesContent":["if (window.location.hash && window.location.hash == '#_=_') {\n    if (window.history && history.pushState) {\n        window.history.pushState(\"\", document.title, window.location.pathname);\n    } else {\n        // Prevent scrolling by storing the page's current scroll offset\n        var scroll = {\n            top: document.body.scrollTop,\n            left: document.body.scrollLeft\n        };\n        window.location.hash = '';\n        // Restore the scroll offset, should be flicker free\n        document.body.scrollTop = scroll.top;\n        document.body.scrollLeft = scroll.left;\n    }\n}","if (window.location.hash && window.location.hash == '#_=_') {\n    window.location.hash = '';\n}\n\nvar threads = new Array();\nvar item_height;\n\n$.ajax({\n    type: 'get',\n    url: 'threads/',\n    dataType: 'json',\n    beforeSend: function () {\n        $('.loader').addClass('active');\n    },\n    success: function (data) {\n        var template = $('#thread-template').html();\n        Mustache.parse(template);\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].movie.category === 'movie') {\n                data[i].category = 'Filme';\n            } else {\n                data[i].category = 'Série';\n            }\n            var rendered = Mustache.render(template, data[i]);\n            $('.outer-threads .segment .threads .gap').first().before(rendered);\n        }\n\n        item_height = $('.thread').first().height()\n\n        $('.loader').removeClass('active');\n        $('.outer-threads .segment, .new').css({\n            'opacity': 1,\n        });\n\n        // -- FILTER\n        $('.threads').mixItUp({\n            load: {\n                filter: '.thread'\n            },\n            animation: {\n                effects: 'fade',\n                duration: 400\n            },\n            callbacks: {\n                onMixLoad: function () {\n                    //Grid.addItems($('.threads .thread'));\n                },\n                onMixEnd: function () {\n                    //Grid.init();\n                    //Grid.addItems($('.threads .thread'));\n                }\n            },\n            controls: {\n                live: true,\n                activeClass: 'active'\n            }\n        });\n        // -- END FILTER\n    },\n});\n\nvar timeout, val, exp;\n$('#search').on('keyup', function () {\n    var $matching = $();\n    var that = $(this);\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n        val = that.val();\n        exp = new RegExp(val, 'i');\n        $('.thread').each(function () {\n            var isMatch = exp.test($(this).data('title'));\n            var isMatch2 = exp.test($(this).data('title-ptbr'));\n            if (isMatch || isMatch2) {\n                $matching = $matching.add($(this));\n                $(this).addClass('active');\n            } else {\n                $(this).removeClass('active');\n            }\n        });\n        $('.threads').mixItUp('filter', $matching);\n    }, 500);\n});\n\n// Coloca o foco na busca, no topo da home\n$('#search').focus();\n\n// Efeitos na lista de indicações na home\n$(document).on('mouseenter', '.overlay', function () {\n    $(this).addClass('active');\n    $(this).parents('figure').find('img').first().addClass('active');\n});\n$(document).on('mouseleave', '.overlay', function () {\n    $(this).removeClass('active');\n    $(this).parents('figure').find('img').first().removeClass('active');\n});\n\nvar active_threads = [],\n    load_thread_info;\n\n$(document).on('click', '.see-more', function (e) {\n    e.preventDefault();\n    var $thread = $(this).closest('.thread');\n    var $info = $thread.find('.more-info');\n\n    if (!$info.hasClass('expanded')) {\n        closeAll();\n        open($thread);\n    } else {\n        closeAll();\n    }\n});\n\n$(document).on('click', '.no-action', function (e) {\n    e.preventDefault();\n});\n\n$(document).on('click', '.close', function () {\n    closeAll();\n});\n\nfunction open($thread) {\n    var hash = $thread.find('.see-more').attr('href');\n    var i = hash.indexOf('-');\n    var split = [hash.slice(1, i), hash.slice(i + 1)];\n    var id = split[0];\n    var slug = split[1];\n    var $info = $thread.find('.more-info');\n    var $wrapper = $thread.find('.inner-wrapper');\n\n    load_thread_info = $.ajax({\n        type: 'get',\n        url: 'threads/' + id + '/' + slug,\n        dataType: 'json',\n        beforeSend: function () {\n            $thread.addClass('expanded');\n\n            $info.append($('<div/>', {\n                class: 'ui inverted large loader active'\n            }));\n\n            // Loader\n            var height = item_height + 200;\n\n            $info.css({height: 120})\n            $thread.css({height: height});\n\n            active_threads.push($thread);\n        },\n        success: function (data) {\n            var template = $('#more-info-template').html();\n            Mustache.parse(template);\n            data.thread.movie.genre = data.thread.movie.genre.split(',');\n            var rendered = Mustache.render(template, data.thread);\n            $wrapper.append(rendered);\n\n\n            $wrapper.find('img').on('load', function () {\n                var height = item_height + $info[0].scrollHeight + 21;\n\n                $info.css({height: $info.prop('scrollHeight')})\n                $thread.css({height: height});\n\n                $info.addClass('expanded');\n                $info.find('.loader').remove();\n\n                $('.pop-permlink').popup({\n                    popup: $('.permlink.' + data.thread.id),\n                    variation: 'inverted wide',\n                    position: 'bottom right',\n                    hoverable: 'true',\n                    on: 'click'\n                });\n            });\n        },\n    });\n}\n\n// Usa o \"Esc\" para fechar threads abertas.\n$(document).keyup(function (e) {\n    if (e.which == 27) {\n        closeAll();\n    }\n});\n\n// jshint -W083\n// Fecha todas as threads abertas;\nfunction closeAll() {\n    var $thread, $info;\n    for (var i = 0; i < active_threads.length; i++) {\n        $thread = active_threads.pop();\n        $info = $thread.find('.more-info');\n\n        $info.removeClass('expanded');\n        $info.css({height: 0})\n        $thread.css({height: item_height});\n        load_thread_info.abort();\n        setTimeout(function () {\n            $info.find('.inner-wrapper').empty();\n        }, 310);\n    }\n}\n\n// Ao colocar o focus no link da thread, o link inteiro será selecionado.\n$(document).on('focus', '.permlink', function (e) {\n    $(this).one('mouseup', function () {\n        $(this).select();\n        return false;\n    }).select();\n});\n"],"sourceRoot":"/source/"}